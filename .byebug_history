exit
n
finding.source[:scanner]
finding.source
finding
Issue
exit
tracker
n
exit
logfile
tracker.options
tracker.labels
tracker
tracker[0]
tracker[:logfile]
tracker.logfile
tracker.logife
tracker
tracker.findings
next
exit
repo
n
repo
exit
n
@scan
n
tasks
n
exit
req.request_head("https://api.github.com/repos/backbeat/groupon")
url
req.request_head(url)
req.request_head(url.path)
req.request_head
req
url.is_a
url.is_a?
url.methods
url.method
url
url.path
url
url.host
url.path
res.code
exit
issue
n
exit
Issue
issue
n
exit
issue
n
tasks.flatten.uniq.compact
tasks
findings
tasks
exit
tracker
NodeSecurityProject
findings
ls
exit
n
tasks
n
lang == nil
exit
Settings.pipeline.tasks_for[lang].split(",")
Settings.pipeline.tasks_for[lang]
Settings.pipeline.tasks_for["JavaScript"]
Settings.pipeline.tasks_for.lang
lang
Settings.pipeline.tasks_for.JavaScript
Settings.pipeline.tasks_for.Ruby
Settings.pipeline.tasks_for.options
Settings.pipeline.tasks_for
Settings.pipeline.tasks_for[0]
Settings.pipeline.tasks_for["Javascript"]
Settings.pipeline.tasks_for[:Javascript]
Settings.pipeline.tasks_for.Javascript
Settings.pipeline.tasks_for...Javascript
Settings.pipeline.tasks_for
Settings.pipeline.tasks_for.Javascript
Settings.tasks_for.Javascript
Settings.tasks_for.lang
Settings.tasks_for
lang
exit
next
@scan.id
@scan
exit
@scan
exit
issue.description
issue.severity
issue.source[:scanner]
issue.source.scanner
issue.source
issue.scan_id
issue.severity
issue.detail
issue = issue[0]
issue.detail
issue
issue = findings[0]
tracker.findings[0].detail
tracker.findings.detail
tracker.findings.length
tracker.findings
tracker
findings[0][2]
findings[0].length
findings[0][1]
findings[0][0]
findings[0][:appname]
findings[0][:@appname]
findings[0].@appname
findings[0]
findings
findings[0]
findings[0][:@appname]
findings[:@appname]
findings.appname
findings[0].appname
findings[0]
findings[1]
findings[0]
findings.length
findings.size
findings
exit
n
options
n
s
exit
n
@debug
@quiet
n
options
n
s
